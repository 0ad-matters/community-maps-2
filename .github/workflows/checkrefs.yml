---
name: checkrefs
concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true
on:
  push:
    branches: [master]
    paths: [art/**, maps/**, simulation/**, '**/checkrefs.yml']
  pull_request:
    branches: [master]
    paths: [art/**, maps/**, simulation/**, '**/checkrefs.yml']
  workflow_dispatch:
jobs:
  checkrefs:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release tag of 0 A.D.
        id: tag_name
        run: |
          echo "release_tag=$(curl -s https://api.github.com/repos/0ad/0ad/releases/latest | jq -r '.tag_name')" >> $GITHUB_OUTPUT
      - name: Check out 0 A.D. (${{ steps.tag_name.outputs.release_tag }})
        uses: actions/checkout@v3
        with:
          repository: 0ad/0ad
          path: 0ad_directory
          ref: ${{ steps.tag_name.outputs.release_tag }}
          clean: true
      - name: Check out community maps 2
        uses: actions/checkout@v3
        with:
          path: community_maps_2_directory
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: pip install lxml
      - name: Run checkrefs.py
        run: |
          ERRLOG="${GITHUB_WORKSPACE}/errlog.txt"
          cd "$GITHUB_WORKSPACE/0ad_directory/source/tools/entity" || exit 1
          python3 ./checkrefs.py -m "$GITHUB_WORKSPACE/community_maps_2_directory" -tax 2> $ERRLOG
          LOG_CONTENTS=$(cat $ERRLOG)
          [[ -z "$LOG_CONTENTS" ]] && exit 0
          echo $LOG_CONTENTS && exit 1
  file-checker:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: tj-actions/changed-files@v35
        id: changed-files-glob
        with:
          separator: ','
          files: |
            **/maps/{random,skirmishes,scenarios}/*.{js,json,pmp,xml}
      - name: Check changed file names
        run: |-
          IFS=$',' read -ra filesArray <<< "${{ steps.changed-files-glob.outputs.all_changed_files }}"
          errorFiles=()
          for file in "${filesArray[@]}"; do
            [[ $(basename "${file%.*}") =~ ^[0-9a-z_]+[0-9a-z]$ ]] || errorFiles+=("$file")
          done
          if [ ${#errorFiles[@]} -gt 0 ]; then
            echo "::error:: Regex for file names doesn't match: ${errorFiles[@]}"
            exit 1
          fi
